//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("Payments", "userscards", "users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PaymentsWPF.users), "cards", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PaymentsWPF.cards), true)]
[assembly: EdmRelationshipAttribute("Payments", "cardsPayments", "cards", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PaymentsWPF.cards), "Payments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PaymentsWPF.payments))]

#endregion

namespace PaymentsWPF
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class PaymentsContainer : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект PaymentsContainer, используя строку соединения из раздела "PaymentsContainer" файла конфигурации приложения.
        /// </summary>
        public PaymentsContainer() : base("name=PaymentsContainer", "PaymentsContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта PaymentsContainer.
        /// </summary>
        public PaymentsContainer(string connectionString) : base(connectionString, "PaymentsContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта PaymentsContainer.
        /// </summary>
        public PaymentsContainer(EntityConnection connection) : base(connection, "PaymentsContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<users> usersНабор
        {
            get
            {
                if ((_usersНабор == null))
                {
                    _usersНабор = base.CreateObjectSet<users>("usersНабор");
                }
                return _usersНабор;
            }
        }
        private ObjectSet<users> _usersНабор;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<payments> paymentsНабор1
        {
            get
            {
                if ((_paymentsНабор1 == null))
                {
                    _paymentsНабор1 = base.CreateObjectSet<payments>("paymentsНабор1");
                }
                return _paymentsНабор1;
            }
        }
        private ObjectSet<payments> _paymentsНабор1;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<cards> cardsНабор
        {
            get
            {
                if ((_cardsНабор == null))
                {
                    _cardsНабор = base.CreateObjectSet<cards>("cardsНабор");
                }
                return _cardsНабор;
            }
        }
        private ObjectSet<cards> _cardsНабор;

        #endregion
        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet usersНабор. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTousersНабор(users users)
        {
            base.AddObject("usersНабор", users);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet paymentsНабор1. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTopaymentsНабор1(payments payments)
        {
            base.AddObject("paymentsНабор1", payments);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet cardsНабор. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTocardsНабор(cards cards)
        {
            base.AddObject("cardsНабор", cards);
        }

        #endregion
    }
    

    #endregion
    
    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Payments", Name="cards")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class cards : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта cards.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="bank_account">Исходное значение свойства bank_account.</param>
        /// <param name="rest">Исходное значение свойства rest.</param>
        /// <param name="status">Исходное значение свойства status.</param>
        /// <param name="user_id">Исходное значение свойства user_id.</param>
        /// <param name="created_admin_id">Исходное значение свойства created_admin_id.</param>
        /// <param name="created_date">Исходное значение свойства created_date.</param>
        /// <param name="blocked_id">Исходное значение свойства blocked_id.</param>
        /// <param name="blocked_date">Исходное значение свойства blocked_date.</param>
        public static cards Createcards(global::System.Int32 id, global::System.String bank_account, global::System.Double rest, global::System.String status, global::System.Int32 user_id, global::System.Int32 created_admin_id, global::System.DateTime created_date, global::System.Int32 blocked_id, global::System.DateTime blocked_date)
        {
            cards cards = new cards();
            cards.id = id;
            cards.bank_account = bank_account;
            cards.rest = rest;
            cards.status = status;
            cards.user_id = user_id;
            cards.created_admin_id = created_admin_id;
            cards.created_date = created_date;
            cards.blocked_id = blocked_id;
            cards.blocked_date = blocked_date;
            return cards;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String bank_account
        {
            get
            {
                return _bank_account;
            }
            set
            {
                Onbank_accountChanging(value);
                ReportPropertyChanging("bank_account");
                _bank_account = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("bank_account");
                Onbank_accountChanged();
            }
        }
        private global::System.String _bank_account;
        partial void Onbank_accountChanging(global::System.String value);
        partial void Onbank_accountChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double rest
        {
            get
            {
                return _rest;
            }
            set
            {
                OnrestChanging(value);
                ReportPropertyChanging("rest");
                _rest = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("rest");
                OnrestChanged();
            }
        }
        private global::System.Double _rest;
        partial void OnrestChanging(global::System.Double value);
        partial void OnrestChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String status
        {
            get
            {
                return _status;
            }
            set
            {
                OnstatusChanging(value);
                ReportPropertyChanging("status");
                _status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("status");
                OnstatusChanged();
            }
        }
        private global::System.String _status;
        partial void OnstatusChanging(global::System.String value);
        partial void OnstatusChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private global::System.Int32 _user_id;
        partial void Onuser_idChanging(global::System.Int32 value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 created_admin_id
        {
            get
            {
                return _created_admin_id;
            }
            set
            {
                Oncreated_admin_idChanging(value);
                ReportPropertyChanging("created_admin_id");
                _created_admin_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("created_admin_id");
                Oncreated_admin_idChanged();
            }
        }
        private global::System.Int32 _created_admin_id;
        partial void Oncreated_admin_idChanging(global::System.Int32 value);
        partial void Oncreated_admin_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime created_date
        {
            get
            {
                return _created_date;
            }
            set
            {
                Oncreated_dateChanging(value);
                ReportPropertyChanging("created_date");
                _created_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("created_date");
                Oncreated_dateChanged();
            }
        }
        private global::System.DateTime _created_date;
        partial void Oncreated_dateChanging(global::System.DateTime value);
        partial void Oncreated_dateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 blocked_id
        {
            get
            {
                return _blocked_id;
            }
            set
            {
                Onblocked_idChanging(value);
                ReportPropertyChanging("blocked_id");
                _blocked_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("blocked_id");
                Onblocked_idChanged();
            }
        }
        private global::System.Int32 _blocked_id;
        partial void Onblocked_idChanging(global::System.Int32 value);
        partial void Onblocked_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime blocked_date
        {
            get
            {
                return _blocked_date;
            }
            set
            {
                Onblocked_dateChanging(value);
                ReportPropertyChanging("blocked_date");
                _blocked_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("blocked_date");
                Onblocked_dateChanged();
            }
        }
        private global::System.DateTime _blocked_date;
        partial void Onblocked_dateChanging(global::System.DateTime value);
        partial void Onblocked_dateChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payments", "userscards", "users")]
        public users users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<users>("Payments.userscards", "users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<users>("Payments.userscards", "users").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<users> usersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<users>("Payments.userscards", "users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<users>("Payments.userscards", "users", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payments", "cardsPayments", "Payments")]
        public EntityCollection<payments> payments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<payments>("Payments.cardsPayments", "Payments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<payments>("Payments.cardsPayments", "Payments", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Payments", Name="payments")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class payments : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта payments.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="paymnet_sum">Исходное значение свойства paymnet_sum.</param>
        /// <param name="payment_date">Исходное значение свойства payment_date.</param>
        /// <param name="commit">Исходное значение свойства commit.</param>
        /// <param name="card_id">Исходное значение свойства card_id.</param>
        public static payments Createpayments(global::System.Int32 id, global::System.Double paymnet_sum, global::System.DateTime payment_date, global::System.Boolean commit, global::System.Int32 card_id)
        {
            payments payments = new payments();
            payments.id = id;
            payments.paymnet_sum = paymnet_sum;
            payments.payment_date = payment_date;
            payments.commit = commit;
            payments.card_id = card_id;
            return payments;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double paymnet_sum
        {
            get
            {
                return _paymnet_sum;
            }
            set
            {
                Onpaymnet_sumChanging(value);
                ReportPropertyChanging("paymnet_sum");
                _paymnet_sum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("paymnet_sum");
                Onpaymnet_sumChanged();
            }
        }
        private global::System.Double _paymnet_sum;
        partial void Onpaymnet_sumChanging(global::System.Double value);
        partial void Onpaymnet_sumChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime payment_date
        {
            get
            {
                return _payment_date;
            }
            set
            {
                Onpayment_dateChanging(value);
                ReportPropertyChanging("payment_date");
                _payment_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("payment_date");
                Onpayment_dateChanged();
            }
        }
        private global::System.DateTime _payment_date;
        partial void Onpayment_dateChanging(global::System.DateTime value);
        partial void Onpayment_dateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean commit
        {
            get
            {
                return _commit;
            }
            set
            {
                OncommitChanging(value);
                ReportPropertyChanging("commit");
                _commit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("commit");
                OncommitChanged();
            }
        }
        private global::System.Boolean _commit;
        partial void OncommitChanging(global::System.Boolean value);
        partial void OncommitChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 card_id
        {
            get
            {
                return _card_id;
            }
            set
            {
                Oncard_idChanging(value);
                ReportPropertyChanging("card_id");
                _card_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("card_id");
                Oncard_idChanged();
            }
        }
        private global::System.Int32 _card_id;
        partial void Oncard_idChanging(global::System.Int32 value);
        partial void Oncard_idChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payments", "cardsPayments", "cards")]
        public cards cards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<cards>("Payments.cardsPayments", "cards").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<cards>("Payments.cardsPayments", "cards").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<cards> cardsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<cards>("Payments.cardsPayments", "cards");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<cards>("Payments.cardsPayments", "cards", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Payments", Name="users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class users : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта users.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="name">Исходное значение свойства name.</param>
        /// <param name="crypted_password">Исходное значение свойства crypted_password.</param>
        /// <param name="role">Исходное значение свойства role.</param>
        /// <param name="status">Исходное значение свойства status.</param>
        /// <param name="block_date">Исходное значение свойства block_date.</param>
        /// <param name="created_admin_id">Исходное значение свойства created_admin_id.</param>
        /// <param name="blocked_admin_id">Исходное значение свойства blocked_admin_id.</param>
        public static users Createusers(global::System.Int32 id, global::System.String name, global::System.String crypted_password, global::System.String role, global::System.String status, global::System.DateTime block_date, global::System.Int32 created_admin_id, global::System.Int32 blocked_admin_id)
        {
            users users = new users();
            users.id = id;
            users.name = name;
            users.crypted_password = crypted_password;
            users.role = role;
            users.status = status;
            users.block_date = block_date;
            users.created_admin_id = created_admin_id;
            users.blocked_admin_id = blocked_admin_id;
            return users;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String crypted_password
        {
            get
            {
                return _crypted_password;
            }
            set
            {
                Oncrypted_passwordChanging(value);
                ReportPropertyChanging("crypted_password");
                _crypted_password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("crypted_password");
                Oncrypted_passwordChanged();
            }
        }
        private global::System.String _crypted_password;
        partial void Oncrypted_passwordChanging(global::System.String value);
        partial void Oncrypted_passwordChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String role
        {
            get
            {
                return _role;
            }
            set
            {
                OnroleChanging(value);
                ReportPropertyChanging("role");
                _role = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("role");
                OnroleChanged();
            }
        }
        private global::System.String _role;
        partial void OnroleChanging(global::System.String value);
        partial void OnroleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String status
        {
            get
            {
                return _status;
            }
            set
            {
                OnstatusChanging(value);
                ReportPropertyChanging("status");
                _status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("status");
                OnstatusChanged();
            }
        }
        private global::System.String _status;
        partial void OnstatusChanging(global::System.String value);
        partial void OnstatusChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime block_date
        {
            get
            {
                return _block_date;
            }
            set
            {
                Onblock_dateChanging(value);
                ReportPropertyChanging("block_date");
                _block_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("block_date");
                Onblock_dateChanged();
            }
        }
        private global::System.DateTime _block_date;
        partial void Onblock_dateChanging(global::System.DateTime value);
        partial void Onblock_dateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 created_admin_id
        {
            get
            {
                return _created_admin_id;
            }
            set
            {
                Oncreated_admin_idChanging(value);
                ReportPropertyChanging("created_admin_id");
                _created_admin_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("created_admin_id");
                Oncreated_admin_idChanged();
            }
        }
        private global::System.Int32 _created_admin_id;
        partial void Oncreated_admin_idChanging(global::System.Int32 value);
        partial void Oncreated_admin_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 blocked_admin_id
        {
            get
            {
                return _blocked_admin_id;
            }
            set
            {
                Onblocked_admin_idChanging(value);
                ReportPropertyChanging("blocked_admin_id");
                _blocked_admin_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("blocked_admin_id");
                Onblocked_admin_idChanged();
            }
        }
        private global::System.Int32 _blocked_admin_id;
        partial void Onblocked_admin_idChanging(global::System.Int32 value);
        partial void Onblocked_admin_idChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payments", "userscards", "cards")]
        public EntityCollection<cards> cards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<cards>("Payments.userscards", "cards");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<cards>("Payments.userscards", "cards", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
